{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Task/cvTest/src/_component/Header/Burger/BurgerList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 260,\n    backgroundColor: theme.palette.background.main\n  },\n  burger_list_item: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '150px',\n    margin: 'auto',\n    color: '#fff'\n  },\n  icon: {\n    marginRight: 10\n  }\n}));\n\nconst BurgerList = ({\n  isMenuOpen\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const burgerList = useSelector(state => state.burgerList.burger_list);\n\n  function isHandleIcons(icon) {\n    switch (icon) {\n      case 'Mediators':\n        return 'fab fa-medium';\n\n      case 'CV':\n        return 'fas fa-clipboard-list';\n\n      case 'Projects':\n        return 'fas fa-project-diagram';\n\n      case 'Tasks':\n        return 'fas fa-tasks';\n\n      default:\n        return 'fas fa-tasks';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    component: \"nav\",\n    \"aria-labelledby\": \"nested-list-subheader\",\n    subheader: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"burger_menu_title_btn\",\n      children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n        component: \"div\",\n        id: \"nested-list-subheader\",\n        children: \"Innowise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this),\n    classes: {\n      position: 'fixed',\n      position: 'relative'\n    },\n    className: isMenuOpen ? 'burger_menu open' : 'burger_menu',\n    children: burgerList.map(elem => {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        className: classes.burger_list_item,\n        button: true,\n        component: Link,\n        to: '' + elem.src,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.icon,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: isHandleIcons(elem.icon)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: elem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BurgerList, \"nMOobBPDkh1NuF1UJwFGukVEWKg=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = BurgerList;\nexport default BurgerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BurgerList\");","map":{"version":3,"sources":["/home/user/Desktop/Task/cvTest/src/_component/Header/Burger/BurgerList.jsx"],"names":["React","makeStyles","List","ListItem","ListItemText","ListSubheader","Link","useSelector","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","main","burger_list_item","display","alignItems","margin","color","icon","marginRight","BurgerList","isMenuOpen","classes","burgerList","state","burger_list","isHandleIcons","position","map","elem","src","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 260,\n    backgroundColor: theme.palette.background.main,\n  },\n  burger_list_item: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '150px',\n    margin: 'auto',\n    color: '#fff',\n  },\n  icon: {\n    marginRight: 10,\n  },\n}));\n\nconst BurgerList = ({ isMenuOpen }) => {\n  const classes = useStyles();\n  const burgerList = useSelector((state) => state.burgerList.burger_list);\n\n  function isHandleIcons(icon) {\n    switch (icon) {\n      case 'Mediators':\n        return 'fab fa-medium';\n      case 'CV':\n        return 'fas fa-clipboard-list';\n      case 'Projects':\n        return 'fas fa-project-diagram';\n      case 'Tasks':\n        return 'fas fa-tasks';\n      default:\n        return 'fas fa-tasks';\n    }\n  }\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={\n        <div className=\"burger_menu_title_btn\">\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n            Innowise\n          </ListSubheader>\n        </div>\n      }\n      classes={{ position: 'fixed', position: 'relative' }}\n      className={isMenuOpen ? 'burger_menu open' : 'burger_menu'}\n    >\n      {burgerList.map((elem) => {\n        return (\n          <ListItem\n            className={classes.burger_list_item}\n            button\n            component={Link}\n            to={'' + elem.src}\n          >\n            <div className={classes.icon}>\n              <i class={isHandleIcons(elem.icon)}></i>\n            </div>\n            {isMenuOpen && <ListItemText primary={elem.name} />}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\nexport default BurgerList;\n"]},"metadata":{},"sourceType":"module"}